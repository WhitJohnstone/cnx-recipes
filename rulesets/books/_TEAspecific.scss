
//ad hoc TEAspecific specific requirements for the TEG Gateway imports process


@if $Config_TEAspecificLOHeaders {
  :pass(0) {
    .learning-objectives {
      &::before {
        container: h3;
        data-type: "title";
        content: "Learning Objectives";
      }
    }
  }
}

@if $Config_hasCompositeAppendixes {
  :pass(1) {
    body {
      .appendix {
        move-to: chapterAppendices;
      }
      &::after {
        container: span;
        class: "os-text";
        content: "Appendices";
        move-to: AppendixTitleSpans;
      }
      &::after {
        container: h1;
        data-type: "document-title";
        content: pending(AppendixTitleSpans);
        move-to: appendicesTitle;
      }
      &::after {
        data-type: composite-chapter;
        data-uuid-key: appendicesChapter;
        // attr-id: uuid() "@1";
        content: pending(appendicesTitle) pending(chapterAppendices);
      }
    }
  }
  :pass(3) {
    .appendix {
      &::inside {
        container: section;
        class: "appendix-container";
      }
    }
  }
  :pass(4) {
    .appendix {
      .appendix-container {
      > h1[data-type="document-title"] {
        copy-to: appendixTitle;
       }
       [data-type="metadata"] {
        move-to: metadata;
       }
     }
     &:deferred {
      content:  pending(metadata) pending(appendixTitle)  content();
     }
    }
  }
}

@if $Config_TEAspecificHasCompositePreface {
  :pass(1) {
    body {
      .preface {
        move-to: chapterPreface;
      }
      &::before {
        container: span;
        class: "os-text";
        content: "Preface";
        move-to: prefaceTitleSpans;
      }
      &::before {
        container: h1;
        data-type: "document-title";
        content: pending(prefaceTitleSpans);
        move-to: prefaceTitle;
      }
      &:deferred::before {
        data-type: composite-chapter;
        data-uuid-key: prefaceChapter;
        // attr-id: uuid() "@1";
        content: pending(prefaceTitle) pending(chapterPreface);
      }
    }
  }
  :pass(3) {
    .preface {
      &::inside {
        container: section;
        class: "preface-container";
      }
    }
  }
  :pass(4) {
    .preface {
      .preface-container {
      > h1[data-type="document-title"] {
        copy-to: prefaceTitle;
       }
       [data-type="metadata"] {
        move-to: metadata;
       }
     }
     &:deferred {
      content:  pending(metadata) pending(prefaceTitle)  content();
     }
    }
  }
}

// @if $Config_TEAspecificReferencePage {
//   :pass(6) {
//     .os-eob {
//       > [data-type="document-title"] {
//         node-set: eobTitle;
//       }
//       &::outside{
//         data-type: "composite-chapter";
//         content: nodes(eobTitle) pending(referencesTitle) content();
//       }
//     }
//   }
// }

//remove the index
:pass(6) {
    @include modify_trash(".os-index-container");
    @include modify_trash(".os-solutions-container");
    @include utils_clearTrash();
}
:pass(7) {
  @include modify_retitleHeaders($Config_hasCompositeAppendixes);
}
